[{"F:\\HV_Hackathon\\HV\\src\\Components\\Registration\\RegistrationForm.js":"1","F:\\HV_Hackathon\\HV\\src\\index.js":"2","F:\\HV_Hackathon\\HV\\src\\App.js":"3","F:\\HV_Hackathon\\HV\\src\\Components\\Login\\LoginForm.js":"4","F:\\HV_Hackathon\\HV\\src\\Components\\Home\\Home.js":"5"},{"size":13289,"mtime":1606657932274,"results":"6","hashOfConfig":"7"},{"size":529,"mtime":1606588452467,"results":"8","hashOfConfig":"7"},{"size":3089,"mtime":1606665565560,"results":"9","hashOfConfig":"7"},{"size":5100,"mtime":1606661718453,"results":"10","hashOfConfig":"7"},{"size":15484,"mtime":1606673028644,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ir3lgj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"F:\\HV_Hackathon\\HV\\src\\Components\\Registration\\RegistrationForm.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Col, Row, Container, h1 } from 'react-bootstrap';\r\nimport {FormGroup,Label,Input,Card,CardBody,Spinner} from 'reactstrap';\r\nimport axios from 'axios';\r\nexport default class RegistrationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            client_org_name:'',\r\n            client_org_email:'',\r\n            client_org_password:'',\r\n            cleint_org_category_name:[],\r\n            client_main_branch_name:[],\r\n            cleint_org_category:[],\r\n            client_main_branch:[],\r\n            client_org_phone:'',\r\n            branch:[],\r\n            category:[],\r\n            spinner:false\r\n        }\r\n        this.handleSubmitval = this.handleSubmitval.bind(this)\r\n    }\r\n    async componentDidMount(){\r\n        this.setState({spinner:true});\r\n        await axios.get('http://localhost:5555/start/branches').then(response =>{\r\n            const json = response.data.data;\r\n  \r\n    // console.log(json)\r\n    this.setState({ branch: json });\r\n    // console.log(this.state.branch);\r\n                      }).catch(err =>{\r\n                        console.log(err);\r\n                      });\r\n                      await axios.get(' http://localhost:5555/start/categories').then(response =>{\r\n                        const json = response.data.data;\r\n              \r\n                // console.log(json)\r\n                this.setState({ category: json });\r\n                console.log(this.state.category);\r\n                this.setState({spinner:false});\r\n                                  }).catch(err =>{\r\n                                    console.log(err);\r\n                                  })\r\n                     \r\n    }\r\n   async handleSubmitval(){\r\n        if(this.state.client_org_name.length == 0 || this.state.client_org_email.length == 0 || this.state.client_org_password.length == 0 || this.state.client_org_phone.length == 0)\r\n\r\n        {\r\n            alert(\"All fiels are Mandatory\");\r\n        }\r\n        else if(this.state.client_main_branch_name.length == 0)\r\n        {\r\n            alert(\"Select Branch Name\");\r\n            \r\n        }\r\n       \r\n        // else if(this.state.client_org_category_name.length == 0)\r\n        // {\r\n        //    console.log('notct');\r\n        // }\r\n        else{\r\n        var client_main_branch,cleint_org_category;\r\n        // console.log(this.state.client_org_name);\r\n        // console.log(this.state.client_org_email);\r\n        // console.log(this.state.client_org_password,this.state.client_org_phone,this.state.client_org_category_name,this.state.client_main_branch_name);\r\n   for(var i=0;i<this.state.branch.length;i++){\r\n    if(this.state.client_main_branch_name == this.state.branch[i].branch_name)\r\n    {\r\n        // console.log('loop',i)\r\n        client_main_branch=this.state.branch[i].branch_id;\r\n// console.log(client_main_branch);\r\n// this.setState({client_main_branch:this.state.branch[i].branch_id})\r\n// console.log(this.state.client_main_branch);\r\n    }\r\n}\r\n     for(var i=0;i<this.state.category.length;i++){\r\n    if(this.state.client_org_category_name == this.state.category[i].category_name)\r\n    {\r\n        // console.log('loop',i)\r\n        cleint_org_category=this.state.category[i].category_id;\r\n// console.log(cleint_org_category);\r\n// this.setState({client_main_branch:this.state.branch[i].branch_id})\r\n// console.log(this.state.client_main_branch);\r\n    }\r\n   }\r\n   console.log(this.state.client_org_name);\r\n   console.log(this.state.client_org_email);\r\n   console.log(this.state.client_org_password,this.state.client_org_phone,cleint_org_category,client_main_branch);\r\nthis.setState({spinner:true});\r\n//    this.props.history.push('/LoginForm');\r\n  await axios.post('http://localhost:5555/auth/register', {\r\n    \"client_org_name\":this.state.client_org_name,\r\n    \"client_org_email\":this.state.client_org_email,\r\n    \"client_org_password\":this.state.client_org_password,\r\n    \"client_org_phone\":this.state.client_org_phone,\r\n    \"cleint_org_category\":cleint_org_category,\r\n    \"client_main_branch\":client_main_branch\r\n    \r\n        // \"client_org_name\":\"Valli Vilas\",\r\n        // \"client_org_email\":\"premviiiel@gmail.com\",\r\n        // \"client_org_password\":\"8754918843\",\r\n        // \"cleint_org_category\":\"deu4mm\",\r\n        // \"client_org_phone\":\"8754918843\",\r\n        // \"client_main_branch\":\"vk84za\"\r\n    \r\n  }).then(response =>{\r\n \r\nconsole.log(response);\r\nif(response.data.msg == \"User registered successfully\")\r\n{\r\n    this.setState({spinner:false});\r\nthis.props.history.push('/LoginForm');\r\n\r\n}\r\nelse if(response.data.msg == \"Email already exists\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Email Id already exists\");\r\n    window.location.reload(false);\r\n}\r\nelse if(response.data.msg == \"Email badly formatted\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Enter correct Email Id\");\r\n    window.location.reload(false);\r\n}\r\nelse if(response.data.msg == \"Internal error / Bad payload\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Something went wrong, please try another time \");\r\n    window.location.reload(false);\r\n}\r\n\r\n              }).catch(err =>{\r\n                console.log(err);\r\n              })\r\n}    \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                   {this.state.spinner == true ?\r\n              <Spinner type=\"grow\" color=\"primary\" style={{margin: 0,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                transform: 'translateY(-50%)'}}/>    \r\n            :\r\n         \r\n            <Container>\r\n             \r\n            <Row>\r\n                <Col xs={12}><h3 class=\"text-center\" style={{marginTop:'4%'}} >Registration Form </h3>\r\n                </Col>\r\n            </Row>\r\n     \r\n            <Row style={{marginTop:'4%'}}>\r\n            <Col lg=\"3\" md=\"3\" sm=\"12\" xs=\"12\">\r\n                </Col>\r\n             <Col lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\r\n           <Card>\r\n             <CardBody style={{backgroundColor:'#fff'}}>\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Organization Name</p>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"namae\"\r\n                    placeholder=\"Organization Name\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_name: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Organization Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Organization Email\" />\r\n                    \r\n                    </Form.Group> */}\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Organization Email</p>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Organization Email\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_email: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                        Password should contain atleast 8 characters\r\n                        </Form.Text>\r\n                    </Form.Group> */}\r\n                    {/* <FormGroup> */}\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Password</p>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_password: event.target.value})}\r\n                  />\r\n                   <Form.Text className=\"text-muted\" style={{textAlign:'left'}}>\r\n                        Password should contain atleast 8 characters\r\n                        </Form.Text>\r\n                </FormGroup>\r\n                <FormGroup>\r\n\r\n                  <p style={{textAlign:'left'}} for=\"examplecategory\">Main Branch</p>\r\n                \r\n              \r\n                    <Input type=\"select\" name=\"branch\" onChange={(event) => this.setState({client_main_branch_name: event.target.value})}>\r\n                    <option>Select</option>\r\n                    {this.state.branch.map(\r\n                    ({  branch_id,branch_name }) => (\r\n                  <option>{branch_name}</option>\r\n                  ),\r\n                  )}\r\n                    </Input>\r\n\r\n                    \r\n                     {/* <Col md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <Button onClick={this.name.bind(this,title,images,location,tags,entryfee,fee,Category,event_type,attendees,_id,address,description,seatAvailable,event_date,created_at,updated_at )} style={{background:'white',color:'black',width:'100%'}}>\r\n                   \r\n                 </Button> \r\n                  </Col> */}\r\n             \r\n              \r\n                 \r\n                </FormGroup>\r\n                    \r\n                <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Phone Number</p>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"mobilenumber\"\r\n                    placeholder=\"Phone Number\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_phone: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n\r\n                  <p style={{textAlign:'left'}} for=\"examplecategory\">Category</p>\r\n                \r\n              \r\n                    <Input type=\"select\" name=\"category\" onChange={(event) => this.setState({client_org_category_name: event.target.value})}>\r\n                    <option>Select</option>\r\n                    {this.state.category.map(\r\n                    ({  category_name,category_id }) => (\r\n                  <option>{category_name}</option>\r\n                  ),\r\n                  )}\r\n                    </Input>\r\n                    </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </Form.Group> */}\r\n\r\n                    {/* <Form.Group controlId=\"formBasicOrganisation\">\r\n                        <Form.Label>Organisation</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Organisation Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCategoryType\">\r\n                        <Form.Label>Category Type</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Category Type\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control placeholder=\"1234 Main St\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Address 2</Form.Label>\r\n                        <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>...</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmitval} active>\r\n                        Submit\r\n                    </Button>\r\n                  </CardBody>\r\n                  </Card>\r\n                </Col>\r\n             \r\n            </Row>\r\n    \r\n            </Container>\r\n    }\r\n               </div>\r\n        );\r\n    }\r\n}","F:\\HV_Hackathon\\HV\\src\\index.js",[],["41","42"],"F:\\HV_Hackathon\\HV\\src\\App.js",["43","44","45"],"F:\\HV_Hackathon\\HV\\src\\Components\\Login\\LoginForm.js",["46","47","48","49","50","51","52","53","54","55","56","57"],"F:\\HV_Hackathon\\HV\\src\\Components\\Home\\Home.js",["58","59","60","61","62","63","64","65","66"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Col, Row, Container } from 'react-bootstrap';\r\nimport {  Card,\r\n    CardHeader,\r\n    CardBody,\r\nFormGroup,\r\nLabel,\r\nCardTitle,\r\nCardText,\r\nInput,Table,Spinner,Modal,ModalBody,ModalHeader,ModalFooter} from 'reactstrap';\r\nimport axios from 'axios';\r\nconst tableTypes = ['hover'];\r\n// const URL = \"http://localhost:5555/\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       \r\n        spinner:false,\r\n        client_org_password:'',\r\n        client_org_email:'',\r\n        details:false,\r\n        total_population:'',\r\n        city_distance:'',\r\n        competitors:'',\r\n        category:'',\r\n        modal: true\r\n    }\r\n    this.submit = this.submit.bind(this)\r\n}\r\n  componentDidMount(){\r\n    // localStorage.clear();\r\n  \r\n    var key = localStorage.getItem(\"token\");\r\n\r\n \r\n    if(key == null){\r\n      this.props.history.push(\"/LoginForm\");\r\n    }\r\n   \r\n   \r\n   \r\n  }\r\n  async submit(){\r\n    if(this.state.Lat.length == 0 || this.state.Long.length == 0 )\r\n\r\n    {\r\n        alert(\"All fiels are Mandatory\");\r\n    }\r\n    else{\r\n      this.setState({spinner:true});\r\n    var category = localStorage.getItem(\"category\");\r\n    this.setState({category:category});\r\n    var key = localStorage.getItem(\"token\");\r\n  // console.log(this.state.Lat,this.state.Long)\r\n  // console.log(typeof this.state.Lat);\r\n  var Latitude = parseFloat(this.state.Lat);\r\n  var Longitude = parseFloat(this.state.Long);\r\n  let body = {\r\n    \"Lat\": Latitude,\r\n    \"Long\": Longitude,\r\n    \"category\": category\r\n  }\r\n  \r\n    await axios.post('http://localhost:5555/analysis/latlong',body,\r\n{\r\n  headers: {\r\n    'x-access-token': key,\r\n  }\r\n}\r\n).then(response =>{\r\n\r\nconsole.log(response);\r\nthis.setState({total_population:response.data.Neat_By_city_details.total_population});\r\nthis.setState({city_distance:response.data.Neat_By_city_details.city_and_distance});\r\nthis.setState({competitors:response.data.Competitors});\r\nconsole.log(this.state.competitors);\r\nconsole.log(this.state.total_population);\r\nthis.setState({spinner:false,details:true});\r\n    // this.setState({spinner:false});\r\n//     if(response.data.msg == \"Login success :)\")\r\n// {\r\n//   }\r\n}).catch(err =>{\r\n  console.log(err);\r\n})\r\n}\r\n  }\r\n    render() {\r\n        return (\r\n          <div>\r\n            <div>\r\n            {this.state.details == true ?\r\n           <Container >\r\n           <Row style={{marginTop:'4%'}}>\r\n            <Col xs={12}><h3 class=\"text-center\" >Information</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{marginTop:'4%'}}>\r\n            <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\r\n           \r\n      <FormGroup row>\r\n                  <Label for=\"exampleEmail\" sm={2}>\r\n                    Population\r\n                  </Label>\r\n                  <Col sm={10}>\r\n                    <Input\r\n                    disabled={true}\r\n                      placeholder={this.state.total_population}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n      \r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\r\n      \r\n              {/* <FormGroup row>\r\n                  <Label for=\"exampleEmail\" sm={2}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={10}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"with a placeholder\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup> */}\r\n         <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmitval} active>\r\n                        Age Analysis\r\n                    </Button>\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n          <ModalBody>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color='primary' onClick={this.toggle}>Do Something</Button>{' '}\r\n            <Button color='secondary' onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n              </Col>\r\n              </Row>\r\n              {this.state.city_distance.length < 0 ?\r\n    <div>\r\n              <p style={{textAlign:'left',color:'#000',marginTop:'5%',fontSize:26,fontWeight:500}}>Nearby Cities</p>\r\n              <Row>\r\n              {this.state.city_distance.map(\r\n                    ({  city,lat,long,distance_in_km }) => (\r\n      <Col sm=\"4\" style={{marginTop:'2%'}}>\r\n        <Card body>\r\n                    <CardTitle tag=\"h5\">City : {city}</CardTitle>\r\n                    <CardText>Distance (in km) : {distance_in_km}</CardText>\r\n                    <CardText>Latitude : {lat}</CardText>\r\n                    <CardText>Longitude : {long}</CardText>\r\n        </Card>\r\n      </Col>\r\n                    ))}\r\n      \r\n    </Row>\r\n    </div>\r\n    :\r\n    null}\r\n    {this.state.competitors.length < 0 ?\r\n    <div>\r\n    <p style={{textAlign:'left',color:'#000',marginTop:'5%',fontSize:26,fontWeight:500}}>Competitors</p>\r\n              <Row>\r\n              {this.state.competitors.map(\r\n                    ({  name,location }) => (\r\n      <Col sm=\"4\" style={{marginTop:'2%'}}>\r\n        <Card body>\r\n                    <CardTitle tag=\"h5\">Name : {name}</CardTitle>\r\n                    <CardText>Category : {this.state.category}</CardText>\r\n                    <CardText>Latitude : {location.lat}</CardText>\r\n                    <CardText>Longitude : {location.lng}</CardText>\r\n        </Card>\r\n      </Col>\r\n                    ))}\r\n      \r\n    </Row>\r\n    </div>\r\n    :\r\n    null\r\n                    }\r\n   \r\n</Container>\r\n           :\r\n           <div>\r\n          {this.state.spinner == true ?\r\n     <Spinner type=\"grow\" color=\"primary\" style={{margin: 0,\r\n       position: 'absolute',\r\n       top: '50%',\r\n       transform: 'translateY(-50%)',\r\n       transform: 'translateY(-50%)'}}/>    \r\n   :\r\n\r\n            <Container >\r\n               <Row style={{marginTop:'4%'}}>\r\n                <Col xs={12}><h3 class=\"text-center\" >Information</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop:'4%'}}>\r\n            <Col lg=\"3\" md=\"3\" sm=\"12\" xs=\"12\">\r\n         </Col>\r\n            <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Card>\r\n            <CardBody style={{backgroundColor:'#343A40'}}>\r\n              <Row>\r\n          <Col xs=\"6\">  <FormGroup>\r\n                <p style={{textAlign:'left',color:'#fff'}}>Latitude</p>\r\n                  <Input\r\n                \r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    placeholder=\"Latitude\"\r\n                    onChange={(event) => this.setState({Lat: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                \r\n                </Col>\r\n        <Col xs=\"6\">  <FormGroup>\r\n                <p style={{textAlign:'left',color:'#fff'}}>Longitude</p>\r\n                  <Input\r\n                \r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    placeholder=\"Longitude\"\r\n                    onChange={(event) => this.setState({Long: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                \r\n                </Col>\r\n      </Row>\r\n      {/* <FormGroup>\r\n      <p style={{textAlign:'left',color:'#fff'}}>Category</p>\r\n                  <Input type=\"select\" name=\"selectMulti\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Input>\r\n                </FormGroup> */}\r\n                {/* <FormGroup>\r\n                <p style={{textAlign:'left',color:'#fff'}}>Radius</p>\r\n                  <Input\r\n                \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Radius\"\r\n                  />\r\n                </FormGroup> */}\r\n                <FormGroup>\r\n                <Button color=\"primary\" onClick={this.submit}>Submit</Button>\r\n                </FormGroup>\r\n              </CardBody>\r\n              </Card>\r\n          </Col>\r\n          {/* <Col lg=\"5\" md=\"5\" sm=\"12\" xs=\"12\" >\r\n          <Card>\r\n              <CardBody style={{backgroundColor:'#343A40'}}>\r\n              <Row>\r\n        <Col xs=\"6\">  <FormGroup >\r\n        <p style={{textAlign:'left',color:'#fff'}}>Latitude</p>\r\n                  <Input\r\n                   \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Latitude\"\r\n                  />\r\n                </FormGroup></Col>\r\n        <Col xs=\"6\">  <FormGroup>\r\n                <p style={{textAlign:'left',color:'#fff'}}>Longitude</p>\r\n                  <Input\r\n                \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Longitude\"\r\n                  />\r\n                </FormGroup>\r\n               \r\n                \r\n                </Col>\r\n              \r\n      </Row>\r\n            \r\n              \r\n              </CardBody>\r\n              <div class=\"map-responsive\" style={{ overflow:'hidden',\r\n\r\npaddingBottom:'56.25%',\r\n\r\nposition:'relative',\r\n\r\nheight:0}}>\r\n\r\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d7775.407073201788!2d80.242253!3d12.990804!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x85f6f20593a8e65f!2sCurneu+MedTech+Innovations+Private+Limited!5e0!3m2!1sen!2sin!4v1565005950916!5m2!1sen!2sin\"  height=\"650\" frameborder=\"0\" style={{left:0,\r\ntop:0,\r\nheight:'100%',\r\n\r\nwidth:'100%',\r\nborder:0,\r\nposition:'absolute'}} allowfullscreen></iframe>\r\n\r\n</div>\r\n            </Card>\r\n          </Col> */}\r\n            </Row>\r\n            {/* <Row style={{marginTop:'4%'}}>\r\n          \r\n            <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n            <Table bordered dark>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Username</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n                </Col>\r\n                </Row> */}\r\n            </Container>  \r\n    }\r\n    </div>\r\n    }\r\n     </div>\r\n    </div>  \r\n        );\r\n    }\r\n}\r\n\r\n// import React, { Component } from \"react\"\r\n// import { compose } from \"recompose\"\r\n// import {\r\n//   withScriptjs,\r\n//   withGoogleMap,\r\n//   GoogleMap,\r\n//   Marker,\r\n//   InfoWindow\r\n// } from \"react-google-maps\"\r\n\r\n// const MapWithAMarker = compose(withScriptjs, withGoogleMap)(props => {\r\n\r\n//   return (\r\n//     <GoogleMap defaultZoom={8} defaultCenter={{ lat: 29.5, lng: -95 }}>\r\n//       {props.markers.map(marker => {\r\n//         const onClick = props.onClick.bind(this, marker)\r\n//         return (\r\n//           <Marker\r\n//             key={marker.id}\r\n//             onClick={onClick}\r\n//             position={{ lat: marker.latitude, lng: marker.longitude }}\r\n//           >\r\n//             {props.selectedMarker === marker &&\r\n//               <InfoWindow>\r\n//                 <div>\r\n//                   {marker.shelter}\r\n//                 </div>\r\n//               </InfoWindow>}\r\n//             }\r\n//           </Marker>\r\n//         )\r\n//       })}\r\n//     </GoogleMap>\r\n//   )\r\n// })\r\n\r\n// export default class ShelterMap extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       shelters: [],\r\n//       selectedMarker: false\r\n//     }\r\n//   }\r\n//   componentDidMount() {\r\n//     fetch(\"https://api.harveyneeds.org/api/v1/shelters?limit=20\")\r\n//       .then(r => r.json())\r\n//       .then(data => {\r\n//         this.setState({ shelters: data.shelters })\r\n//       })\r\n//   }\r\n//   handleClick = (marker, event) => {\r\n//     // console.log({ marker })\r\n//     this.setState({ selectedMarker: marker })\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <MapWithAMarker\r\n//         selectedMarker={this.state.selectedMarker}\r\n//         markers={this.state.shelters}\r\n//         onClick={this.handleClick}\r\n//         googleMapURL=\"https://maps.googleapis.com/maps/api/AIzaSyCHLrxBP9WfQf-_HcYH44TRHDU5oxSivec/libraries=geometry,drawing,places\"\r\n//         loadingElement={<div style={{ height: `100%` }} />}\r\n//         containerElement={<div style={{ height: `400px` }} />}\r\n//         mapElement={<div style={{ height: `100%` }} />}\r\n//       />\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { withScriptjs, withGoogleMap, GoogleMap, Circle } from \"react-google-maps\";\r\n\r\n// const Map = withScriptjs(\r\n//     withGoogleMap(props => (\r\n//         <GoogleMap\r\n//             defaultZoom={12}\r\n//             defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n//             onClick={e => props.onMapClick(e)}\r\n//         >\r\n//             {props.marks.map((mark, index) => (\r\n//                 <Circle  \r\n//                     key={index}\r\n//                     center={mark}\r\n//                     radius={1000}\r\n//                     options={{\r\n//                         strokeColor: \"#66009a\",\r\n//                         strokeOpacity: 0.8,\r\n//                         strokeWeight: 2,\r\n//                         fillColor: `#66009a`,\r\n//                         fillOpacity: 0.35,\r\n//                         zIndex: 1\r\n//                     }}\r\n//                 />\r\n//             ))}\r\n//         </GoogleMap>\r\n//     ))\r\n// );\r\n\r\n// class Home extends Component {\r\n//     state = {\r\n//         marks: []\r\n//     };\r\n\r\n//     setMark = e => {\r\n//         this.setState({ marks: [...this.state.marks, e.latLng] });\r\n//     };\r\n\r\n//     deleteMarkS = () => {\r\n//         this.setState({\r\n//             marks: []\r\n//         });\r\n//     };\r\n\r\n//     render() {\r\n//         const { marks } = this.state;\r\n//         return (\r\n//             <div>\r\n//                 <button onClick={this.deleteMark}>DELETE MARKS</button>\r\n//                 <Map\r\n//                     googleMapURL=\"http://maps.googleapis.com/maps/api/js?key=AIzaSyCHLrxBP9WfQf-_HcYH44TRHDU5oxSivec\"\r\n//                     loadingElement={<div style={{ height: `100%` }} />}\r\n//                     containerElement={<div style={{ height: `400px` }} />}\r\n//                     mapElement={<div style={{ height: `100%` }} />}\r\n//                     onMapClick={this.setMark}\r\n//                     marks={marks}\r\n//                 />;\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Home;",{"ruleId":"67","severity":1,"message":"68","line":2,"column":45,"nodeType":"69","messageId":"70","endLine":2,"endColumn":47},{"ruleId":"67","severity":1,"message":"71","line":3,"column":19,"nodeType":"69","messageId":"70","endLine":3,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":47,"column":46,"nodeType":"74","messageId":"75","endLine":47,"endColumn":48},{"ruleId":"72","severity":1,"message":"73","line":47,"column":89,"nodeType":"74","messageId":"75","endLine":47,"endColumn":91},{"ruleId":"72","severity":1,"message":"73","line":47,"column":135,"nodeType":"74","messageId":"75","endLine":47,"endColumn":137},{"ruleId":"72","severity":1,"message":"73","line":47,"column":178,"nodeType":"74","messageId":"75","endLine":47,"endColumn":180},{"ruleId":"72","severity":1,"message":"73","line":52,"column":59,"nodeType":"74","messageId":"75","endLine":52,"endColumn":61},{"ruleId":"72","severity":1,"message":"73","line":68,"column":43,"nodeType":"74","messageId":"75","endLine":68,"endColumn":45},{"ruleId":"76","severity":1,"message":"77","line":77,"column":14,"nodeType":"69","messageId":"78","endLine":77,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":78,"column":44,"nodeType":"74","messageId":"75","endLine":78,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":110,"column":22,"nodeType":"74","messageId":"75","endLine":110,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":116,"column":27,"nodeType":"74","messageId":"75","endLine":116,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":121,"column":27,"nodeType":"74","messageId":"75","endLine":121,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":126,"column":27,"nodeType":"74","messageId":"75","endLine":126,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":141,"column":40,"nodeType":"74","messageId":"75","endLine":141,"endColumn":42},{"ruleId":"79","severity":1,"message":"80","line":146,"column":17,"nodeType":"81","messageId":"75","endLine":146,"endColumn":26},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"67","severity":1,"message":"86","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"87","line":6,"column":55,"nodeType":"69","messageId":"70","endLine":6,"endColumn":63},{"ruleId":"72","severity":1,"message":"73","line":52,"column":20,"nodeType":"74","messageId":"75","endLine":52,"endColumn":22},{"ruleId":"67","severity":1,"message":"88","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":3,"column":19,"nodeType":"69","messageId":"70","endLine":3,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":32,"column":47,"nodeType":"74","messageId":"75","endLine":32,"endColumn":49},{"ruleId":"72","severity":1,"message":"73","line":32,"column":93,"nodeType":"74","messageId":"75","endLine":32,"endColumn":95},{"ruleId":"72","severity":1,"message":"73","line":49,"column":34,"nodeType":"74","messageId":"75","endLine":49,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":63,"column":27,"nodeType":"74","messageId":"75","endLine":63,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":69,"column":27,"nodeType":"74","messageId":"75","endLine":69,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":75,"column":27,"nodeType":"74","messageId":"75","endLine":75,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":81,"column":27,"nodeType":"74","messageId":"75","endLine":81,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":86,"column":27,"nodeType":"74","messageId":"75","endLine":86,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":101,"column":33,"nodeType":"74","messageId":"75","endLine":101,"endColumn":35},{"ruleId":"79","severity":1,"message":"80","line":106,"column":10,"nodeType":"81","messageId":"75","endLine":106,"endColumn":19},{"ruleId":"67","severity":1,"message":"88","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"89","line":4,"column":5,"nodeType":"69","messageId":"70","endLine":4,"endColumn":15},{"ruleId":"67","severity":1,"message":"90","line":10,"column":7,"nodeType":"69","messageId":"70","endLine":10,"endColumn":12},{"ruleId":"67","severity":1,"message":"91","line":12,"column":7,"nodeType":"69","messageId":"70","endLine":12,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":45,"column":30,"nodeType":"74","messageId":"75","endLine":45,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":45,"column":61,"nodeType":"74","messageId":"75","endLine":45,"endColumn":63},{"ruleId":"72","severity":1,"message":"73","line":93,"column":33,"nodeType":"74","messageId":"75","endLine":93,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":189,"column":31,"nodeType":"74","messageId":"75","endLine":189,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":194,"column":8,"nodeType":"81","messageId":"75","endLine":194,"endColumn":17},"no-unused-vars","'h1' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","no-dupe-keys","Duplicate key 'transform'.","ObjectExpression","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'logo' is defined but never used.","'Redirect' is defined but never used.","'Form' is defined but never used.","'CardHeader' is defined but never used.","'Table' is defined but never used.","'tableTypes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]