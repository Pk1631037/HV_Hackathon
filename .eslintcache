[{"F:\\HV_Hackathon\\HV\\src\\Components\\Registration\\RegistrationForm.js":"1","F:\\HV_Hackathon\\HV\\src\\index.js":"2","F:\\HV_Hackathon\\HV\\src\\App.js":"3","F:\\HV_Hackathon\\HV\\src\\Components\\Login\\LoginForm.js":"4","F:\\HV_Hackathon\\HV\\src\\Components\\Home\\Home.js":"5"},{"size":13289,"mtime":1606657932274,"results":"6","hashOfConfig":"7"},{"size":529,"mtime":1606588452467,"results":"8","hashOfConfig":"7"},{"size":3089,"mtime":1606665565560,"results":"9","hashOfConfig":"7"},{"size":5100,"mtime":1606661718453,"results":"10","hashOfConfig":"7"},{"size":15535,"mtime":1606674138972,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ir3lgj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\HV_Hackathon\\HV\\src\\Components\\Registration\\RegistrationForm.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Col, Row, Container, h1 } from 'react-bootstrap';\r\nimport {FormGroup,Label,Input,Card,CardBody,Spinner} from 'reactstrap';\r\nimport axios from 'axios';\r\nexport default class RegistrationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            client_org_name:'',\r\n            client_org_email:'',\r\n            client_org_password:'',\r\n            cleint_org_category_name:[],\r\n            client_main_branch_name:[],\r\n            cleint_org_category:[],\r\n            client_main_branch:[],\r\n            client_org_phone:'',\r\n            branch:[],\r\n            category:[],\r\n            spinner:false\r\n        }\r\n        this.handleSubmitval = this.handleSubmitval.bind(this)\r\n    }\r\n    async componentDidMount(){\r\n        this.setState({spinner:true});\r\n        await axios.get('http://localhost:5555/start/branches').then(response =>{\r\n            const json = response.data.data;\r\n  \r\n    // console.log(json)\r\n    this.setState({ branch: json });\r\n    // console.log(this.state.branch);\r\n                      }).catch(err =>{\r\n                        console.log(err);\r\n                      });\r\n                      await axios.get(' http://localhost:5555/start/categories').then(response =>{\r\n                        const json = response.data.data;\r\n              \r\n                // console.log(json)\r\n                this.setState({ category: json });\r\n                console.log(this.state.category);\r\n                this.setState({spinner:false});\r\n                                  }).catch(err =>{\r\n                                    console.log(err);\r\n                                  })\r\n                     \r\n    }\r\n   async handleSubmitval(){\r\n        if(this.state.client_org_name.length == 0 || this.state.client_org_email.length == 0 || this.state.client_org_password.length == 0 || this.state.client_org_phone.length == 0)\r\n\r\n        {\r\n            alert(\"All fiels are Mandatory\");\r\n        }\r\n        else if(this.state.client_main_branch_name.length == 0)\r\n        {\r\n            alert(\"Select Branch Name\");\r\n            \r\n        }\r\n       \r\n        // else if(this.state.client_org_category_name.length == 0)\r\n        // {\r\n        //    console.log('notct');\r\n        // }\r\n        else{\r\n        var client_main_branch,cleint_org_category;\r\n        // console.log(this.state.client_org_name);\r\n        // console.log(this.state.client_org_email);\r\n        // console.log(this.state.client_org_password,this.state.client_org_phone,this.state.client_org_category_name,this.state.client_main_branch_name);\r\n   for(var i=0;i<this.state.branch.length;i++){\r\n    if(this.state.client_main_branch_name == this.state.branch[i].branch_name)\r\n    {\r\n        // console.log('loop',i)\r\n        client_main_branch=this.state.branch[i].branch_id;\r\n// console.log(client_main_branch);\r\n// this.setState({client_main_branch:this.state.branch[i].branch_id})\r\n// console.log(this.state.client_main_branch);\r\n    }\r\n}\r\n     for(var i=0;i<this.state.category.length;i++){\r\n    if(this.state.client_org_category_name == this.state.category[i].category_name)\r\n    {\r\n        // console.log('loop',i)\r\n        cleint_org_category=this.state.category[i].category_id;\r\n// console.log(cleint_org_category);\r\n// this.setState({client_main_branch:this.state.branch[i].branch_id})\r\n// console.log(this.state.client_main_branch);\r\n    }\r\n   }\r\n   console.log(this.state.client_org_name);\r\n   console.log(this.state.client_org_email);\r\n   console.log(this.state.client_org_password,this.state.client_org_phone,cleint_org_category,client_main_branch);\r\nthis.setState({spinner:true});\r\n//    this.props.history.push('/LoginForm');\r\n  await axios.post('http://localhost:5555/auth/register', {\r\n    \"client_org_name\":this.state.client_org_name,\r\n    \"client_org_email\":this.state.client_org_email,\r\n    \"client_org_password\":this.state.client_org_password,\r\n    \"client_org_phone\":this.state.client_org_phone,\r\n    \"cleint_org_category\":cleint_org_category,\r\n    \"client_main_branch\":client_main_branch\r\n    \r\n        // \"client_org_name\":\"Valli Vilas\",\r\n        // \"client_org_email\":\"premviiiel@gmail.com\",\r\n        // \"client_org_password\":\"8754918843\",\r\n        // \"cleint_org_category\":\"deu4mm\",\r\n        // \"client_org_phone\":\"8754918843\",\r\n        // \"client_main_branch\":\"vk84za\"\r\n    \r\n  }).then(response =>{\r\n \r\nconsole.log(response);\r\nif(response.data.msg == \"User registered successfully\")\r\n{\r\n    this.setState({spinner:false});\r\nthis.props.history.push('/LoginForm');\r\n\r\n}\r\nelse if(response.data.msg == \"Email already exists\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Email Id already exists\");\r\n    window.location.reload(false);\r\n}\r\nelse if(response.data.msg == \"Email badly formatted\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Enter correct Email Id\");\r\n    window.location.reload(false);\r\n}\r\nelse if(response.data.msg == \"Internal error / Bad payload\"){\r\n    this.setState({spinner:false});\r\n    alert(\"Something went wrong, please try another time \");\r\n    window.location.reload(false);\r\n}\r\n\r\n              }).catch(err =>{\r\n                console.log(err);\r\n              })\r\n}    \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                   {this.state.spinner == true ?\r\n              <Spinner type=\"grow\" color=\"primary\" style={{margin: 0,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                transform: 'translateY(-50%)'}}/>    \r\n            :\r\n         \r\n            <Container>\r\n             \r\n            <Row>\r\n                <Col xs={12}><h3 class=\"text-center\" style={{marginTop:'4%'}} >Registration Form </h3>\r\n                </Col>\r\n            </Row>\r\n     \r\n            <Row style={{marginTop:'4%'}}>\r\n            <Col lg=\"3\" md=\"3\" sm=\"12\" xs=\"12\">\r\n                </Col>\r\n             <Col lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\">\r\n           <Card>\r\n             <CardBody style={{backgroundColor:'#fff'}}>\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Organization Name</p>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"namae\"\r\n                    placeholder=\"Organization Name\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_name: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Organization Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Organization Email\" />\r\n                    \r\n                    </Form.Group> */}\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Organization Email</p>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Organization Email\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_email: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                        Password should contain atleast 8 characters\r\n                        </Form.Text>\r\n                    </Form.Group> */}\r\n                    {/* <FormGroup> */}\r\n                    <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Password</p>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_password: event.target.value})}\r\n                  />\r\n                   <Form.Text className=\"text-muted\" style={{textAlign:'left'}}>\r\n                        Password should contain atleast 8 characters\r\n                        </Form.Text>\r\n                </FormGroup>\r\n                <FormGroup>\r\n\r\n                  <p style={{textAlign:'left'}} for=\"examplecategory\">Main Branch</p>\r\n                \r\n              \r\n                    <Input type=\"select\" name=\"branch\" onChange={(event) => this.setState({client_main_branch_name: event.target.value})}>\r\n                    <option>Select</option>\r\n                    {this.state.branch.map(\r\n                    ({  branch_id,branch_name }) => (\r\n                  <option>{branch_name}</option>\r\n                  ),\r\n                  )}\r\n                    </Input>\r\n\r\n                    \r\n                     {/* <Col md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <Button onClick={this.name.bind(this,title,images,location,tags,entryfee,fee,Category,event_type,attendees,_id,address,description,seatAvailable,event_date,created_at,updated_at )} style={{background:'white',color:'black',width:'100%'}}>\r\n                   \r\n                 </Button> \r\n                  </Col> */}\r\n             \r\n              \r\n                 \r\n                </FormGroup>\r\n                    \r\n                <FormGroup>\r\n                  <p style={{textAlign:'left'}} for=\"exampletitle\">Phone Number</p>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"mobilenumber\"\r\n                    placeholder=\"Phone Number\"\r\n                    // value={this.state.title}\r\n                \r\n                    onChange={(event) => this.setState({client_org_phone: event.target.value})}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n\r\n                  <p style={{textAlign:'left'}} for=\"examplecategory\">Category</p>\r\n                \r\n              \r\n                    <Input type=\"select\" name=\"category\" onChange={(event) => this.setState({client_org_category_name: event.target.value})}>\r\n                    <option>Select</option>\r\n                    {this.state.category.map(\r\n                    ({  category_name,category_id }) => (\r\n                  <option>{category_name}</option>\r\n                  ),\r\n                  )}\r\n                    </Input>\r\n                    </FormGroup>\r\n                    {/* <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </Form.Group> */}\r\n\r\n                    {/* <Form.Group controlId=\"formBasicOrganisation\">\r\n                        <Form.Label>Organisation</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Organisation Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCategoryType\">\r\n                        <Form.Label>Category Type</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Category Type\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control placeholder=\"1234 Main St\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress2\">\r\n                        <Form.Label>Address 2</Form.Label>\r\n                        <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>...</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmitval} active>\r\n                        Submit\r\n                    </Button>\r\n                  </CardBody>\r\n                  </Card>\r\n                </Col>\r\n             \r\n            </Row>\r\n    \r\n            </Container>\r\n    }\r\n               </div>\r\n        );\r\n    }\r\n}","F:\\HV_Hackathon\\HV\\src\\index.js",[],["40","41"],"F:\\HV_Hackathon\\HV\\src\\App.js",["42","43","44"],"F:\\HV_Hackathon\\HV\\src\\Components\\Login\\LoginForm.js",["45","46","47","48","49","50","51","52","53","54","55","56"],"F:\\HV_Hackathon\\HV\\src\\Components\\Home\\Home.js",["57","58","59","60","61","62","63","64","65"],{"ruleId":"66","severity":1,"message":"67","line":2,"column":45,"nodeType":"68","messageId":"69","endLine":2,"endColumn":47},{"ruleId":"66","severity":1,"message":"70","line":3,"column":19,"nodeType":"68","messageId":"69","endLine":3,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":47,"column":46,"nodeType":"73","messageId":"74","endLine":47,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":47,"column":89,"nodeType":"73","messageId":"74","endLine":47,"endColumn":91},{"ruleId":"71","severity":1,"message":"72","line":47,"column":135,"nodeType":"73","messageId":"74","endLine":47,"endColumn":137},{"ruleId":"71","severity":1,"message":"72","line":47,"column":178,"nodeType":"73","messageId":"74","endLine":47,"endColumn":180},{"ruleId":"71","severity":1,"message":"72","line":52,"column":59,"nodeType":"73","messageId":"74","endLine":52,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":68,"column":43,"nodeType":"73","messageId":"74","endLine":68,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":77,"column":14,"nodeType":"68","messageId":"77","endLine":77,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":78,"column":44,"nodeType":"73","messageId":"74","endLine":78,"endColumn":46},{"ruleId":"71","severity":1,"message":"72","line":110,"column":22,"nodeType":"73","messageId":"74","endLine":110,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":116,"column":27,"nodeType":"73","messageId":"74","endLine":116,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":121,"column":27,"nodeType":"73","messageId":"74","endLine":121,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":126,"column":27,"nodeType":"73","messageId":"74","endLine":126,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":141,"column":40,"nodeType":"73","messageId":"74","endLine":141,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":146,"column":17,"nodeType":"80","messageId":"74","endLine":146,"endColumn":26},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"66","severity":1,"message":"85","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"86","line":6,"column":55,"nodeType":"68","messageId":"69","endLine":6,"endColumn":63},{"ruleId":"71","severity":1,"message":"72","line":52,"column":20,"nodeType":"73","messageId":"74","endLine":52,"endColumn":22},{"ruleId":"66","severity":1,"message":"87","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":3,"column":19,"nodeType":"68","messageId":"69","endLine":3,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":32,"column":47,"nodeType":"73","messageId":"74","endLine":32,"endColumn":49},{"ruleId":"71","severity":1,"message":"72","line":32,"column":93,"nodeType":"73","messageId":"74","endLine":32,"endColumn":95},{"ruleId":"71","severity":1,"message":"72","line":49,"column":34,"nodeType":"73","messageId":"74","endLine":49,"endColumn":36},{"ruleId":"71","severity":1,"message":"72","line":63,"column":27,"nodeType":"73","messageId":"74","endLine":63,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":69,"column":27,"nodeType":"73","messageId":"74","endLine":69,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":75,"column":27,"nodeType":"73","messageId":"74","endLine":75,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":81,"column":27,"nodeType":"73","messageId":"74","endLine":81,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":86,"column":27,"nodeType":"73","messageId":"74","endLine":86,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":101,"column":33,"nodeType":"73","messageId":"74","endLine":101,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":106,"column":10,"nodeType":"80","messageId":"74","endLine":106,"endColumn":19},{"ruleId":"66","severity":1,"message":"87","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"88","line":4,"column":5,"nodeType":"68","messageId":"69","endLine":4,"endColumn":15},{"ruleId":"66","severity":1,"message":"89","line":10,"column":7,"nodeType":"68","messageId":"69","endLine":10,"endColumn":12},{"ruleId":"66","severity":1,"message":"90","line":12,"column":7,"nodeType":"68","messageId":"69","endLine":12,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":45,"column":30,"nodeType":"73","messageId":"74","endLine":45,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":45,"column":61,"nodeType":"73","messageId":"74","endLine":45,"endColumn":63},{"ruleId":"71","severity":1,"message":"72","line":94,"column":33,"nodeType":"73","messageId":"74","endLine":94,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":190,"column":31,"nodeType":"73","messageId":"74","endLine":190,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":195,"column":8,"nodeType":"80","messageId":"74","endLine":195,"endColumn":17},"no-unused-vars","'h1' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","no-dupe-keys","Duplicate key 'transform'.","ObjectExpression","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"'logo' is defined but never used.","'Redirect' is defined but never used.","'Form' is defined but never used.","'CardHeader' is defined but never used.","'Table' is defined but never used.","'tableTypes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]